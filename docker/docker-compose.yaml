version: "3"

services:
  zookeeper:
    image: bitnami/zookeeper:3.8
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/bitnami/zookeeper

  kafka:
    image: bitnami/kafka:3.4
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,INTERNAL://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092,INTERNAL://kafka:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka_data:/bitnami/kafka

  postgres:
    image: postgres:14
    container_name: polling-app-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=polling_db
    volumes:
      - postgres_data:/var/lib/postgresql/data

  backend:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: polling-app-backend
    ports:
      - "3000:3000"
    depends_on:
      - kafka
      - postgres
    environment:
      - KAFKA_BOOTSTRAP_SERVER=kafka:29092
      - PORT=3000
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/polling_db
    volumes:
      - ../:/app
      - /app/node_modules

volumes:
  zookeeper_data:
  kafka_data:
  postgres_data:
